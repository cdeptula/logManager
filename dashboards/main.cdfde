{
 "layout": {
  "title": "main",
  "rows": [
   {
    "id": "5e2499a9-b24a-fa9b-3417-57eb0430b756",
    "type": "LayoutResourceFile",
    "typeDesc": "Resource",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "projectJS",
      "type": "Id"
     },
     {
      "name": "resourceFile",
      "value": "/pentaho/api/repos/logManager/static/custom/js/logmanager.js",
      "type": "ResourceFile"
     },
     {
      "name": "resourceType",
      "value": "Javascript",
      "type": "Label"
     }
    ]
   },
   {
    "id": "057185bf-6398-dbba-216a-2eeaa4241a21",
    "type": "LayoutResourceCode",
    "typeDesc": "Resource",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "logData",
      "type": "Id"
     },
     {
      "name": "resourceType",
      "value": "Css",
      "type": "Label"
     },
     {
      "name": "resourceCode",
      "value": ".deleteRow {\n height:40px;\n width:700px;\n color: #333E48;\n font-size:16px;\n font-weight:bold;\n text-align:left;\n margin-bottom:5px;\n vertical-align:middle;\n line-height:1.4em;\n}\n\n.deleteRow .deleteLabel {\n    float:left;\n    width:190px;\n    padding-right:5px;\n} \n\n.deleteRow .deleteAge {\n    float:left;\n    width:45px;\n}\n\n.deleteRow .deleteAge input {\n    width:35px;\n    padding-left:2px;\n    padding-right:2px;\n}\n\n\n.deleteRow .deletePeriod {\n    width:68px;\n    float:left;\n}\n\n\n.deleteRow .deleteLabel {\n    line-height:1.4em;\n    padding: .4em 1em;\n    vertical-align:middle;\n}\n\n.deleteRow .deleteButton {\n    float:left;\n    width:100px;\n}\n\n.deleteRow .deleteButton button {\n    float:left;\n    width:auto;\n    color: #333E48;\n    padding: .1em 1em;\n} \n\n.deleteRow .deleteButton .ui-button-text-only .ui-button-text\n{\n    padding: 0px;\n} ",
      "type": "Resource"
     }
    ]
   },
   {
    "id": "f334052f-b4de-faf6-6a6c-889c1609f2d4",
    "type": "LayoutResourceFile",
    "typeDesc": "Resource",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "projectCSS",
      "type": "Id"
     },
     {
      "name": "resourceFile",
      "value": "/pentaho/api/repos/logManager/static/custom/css/logmanager.css",
      "type": "ResourceFile"
     },
     {
      "name": "resourceType",
      "value": "Css",
      "type": "Label"
     }
    ]
   },
   {
    "id": "b9701c87-6830-38ea-81e1-56febdb2b304",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "headerCell",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "WDheader",
      "type": "String"
     }
    ]
   },
   {
    "id": "6f096bed-258b-0e9f-bf90-8cb9685c5581",
    "type": "LayoutColumn",
    "typeDesc": "Column",
    "parent": "b9701c87-6830-38ea-81e1-56febdb2b304",
    "properties": [
     {
      "name": "name",
      "value": "title",
      "type": "Id"
     },
     {
      "name": "columnSpan",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrepend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnAppend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrependTop",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnAppendBottom",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBigBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "headerTitle",
      "type": "String"
     }
    ]
   },
   {
    "id": "80bb00e9-215b-995a-9a68-75681bc50201",
    "type": "LayoutHtml",
    "typeDesc": "Html",
    "parent": "6f096bed-258b-0e9f-bf90-8cb9685c5581",
    "properties": [
     {
      "name": "name",
      "value": "pluginTitle",
      "type": "Id"
     },
     {
      "name": "html",
      "value": "Log Manager",
      "type": "Html"
     },
     {
      "name": "fontSize",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "color",
      "value": "",
      "type": "Color"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "a209402e-cb14-7743-a081-5128eec84e98",
    "type": "LayoutColumn",
    "typeDesc": "Column",
    "parent": "b9701c87-6830-38ea-81e1-56febdb2b304",
    "properties": [
     {
      "name": "name",
      "value": "refreshButtonObj",
      "type": "Id"
     },
     {
      "name": "columnSpan",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrepend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnAppend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrependTop",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnAppendBottom",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBigBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "refreshButtonCont",
      "type": "String"
     }
    ]
   },
   {
    "id": "9ed413e6-cdfd-3607-a318-6291956fce04",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "deleteOlderCell",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "deleteRow",
      "type": "String"
     }
    ]
   },
   {
    "id": "241abfea-f233-e2eb-99bb-7112b506f8d4",
    "type": "LayoutColumn",
    "typeDesc": "Column",
    "parent": "9ed413e6-cdfd-3607-a318-6291956fce04",
    "properties": [
     {
      "name": "name",
      "value": "deleteLabel",
      "type": "Id"
     },
     {
      "name": "columnSpan",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrepend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnAppend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrependTop",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnAppendBottom",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBigBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "deleteLabel",
      "type": "String"
     }
    ]
   },
   {
    "id": "fc844228-4795-2138-9196-76f9ee6f886a",
    "type": "LayoutHtml",
    "typeDesc": "Html",
    "parent": "241abfea-f233-e2eb-99bb-7112b506f8d4",
    "properties": [
     {
      "name": "name",
      "value": "",
      "type": "Id"
     },
     {
      "name": "html",
      "value": "Delete logs older than ",
      "type": "Html"
     },
     {
      "name": "fontSize",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "color",
      "value": "",
      "type": "Color"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "d701351b-3794-0634-22c1-902cf34c40f0",
    "type": "LayoutColumn",
    "typeDesc": "Column",
    "parent": "9ed413e6-cdfd-3607-a318-6291956fce04",
    "properties": [
     {
      "name": "name",
      "value": "deleteAgeObj",
      "type": "Id"
     },
     {
      "name": "columnSpan",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrepend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnAppend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrependTop",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnAppendBottom",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBigBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "deleteAge",
      "type": "String"
     }
    ]
   },
   {
    "id": "ace03e70-dcfa-c18a-30ee-c85275ccf8a0",
    "type": "LayoutColumn",
    "typeDesc": "Column",
    "parent": "9ed413e6-cdfd-3607-a318-6291956fce04",
    "properties": [
     {
      "name": "name",
      "value": "deletePeriodObj",
      "type": "Id"
     },
     {
      "name": "columnSpan",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrepend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnAppend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrependTop",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnAppendBottom",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBigBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "deletePeriod",
      "type": "String"
     }
    ]
   },
   {
    "id": "2ee0ce28-172b-f3f4-e500-cc1c0bb43ae5",
    "type": "LayoutColumn",
    "typeDesc": "Column",
    "parent": "9ed413e6-cdfd-3607-a318-6291956fce04",
    "properties": [
     {
      "name": "name",
      "value": "deleteButtonObj",
      "type": "Id"
     },
     {
      "name": "columnSpan",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrepend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnAppend",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "columnPrependTop",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnAppendBottom",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "columnBigBorder",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "deleteButton",
      "type": "String"
     }
    ]
   },
   {
    "id": "a8d41939-5725-6e73-8507-b015246287a2",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "tableCell",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   },
   {
    "id": "0243a483-5524-0efe-144b-2863e0307b9c",
    "type": "LayoutRow",
    "typeDesc": "Row",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "name",
      "value": "dialogGrabComponentObj",
      "type": "Id"
     },
     {
      "name": "height",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "backgroundColor",
      "value": "",
      "type": "Color"
     },
     {
      "name": "roundCorners",
      "value": "",
      "type": "RoundCorners"
     },
     {
      "name": "textAlign",
      "value": "",
      "type": "TextAlign"
     },
     {
      "name": "cssClass",
      "value": "",
      "type": "String"
     }
    ]
   }
  ]
 },
 "components": {
  "rows": [
   {
    "id": "OTHERCOMPONENTS",
    "name": "Others",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Others",
      "type": "Label"
     }
    ]
   },
   {
    "id": "26f07c99-4c26-94b3-f176-cb0b85ab4e7e",
    "type": "ComponentsbuttonComponent",
    "typeDesc": "Button Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "refreshButton",
      "type": "Id"
     },
     {
      "name": "label",
      "value": "Refresh",
      "type": "String"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "successCallback",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "expression",
      "value": "function f(){\n    location.reload();    \n}",
      "type": "JavaScript"
     },
     {
      "name": "actionParameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "failureCallback",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "Datasource",
      "value": "",
      "type": "Datasource"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "buttonStyle",
      "value": "themeroller",
      "type": "TableStyle"
     },
     {
      "name": "htmlObject",
      "value": "${p:refreshButtonObj}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "Refresh ",
      "type": "Html"
     }
    ]
   },
   {
    "id": "87403a8c-e161-7965-4eac-a0bceebbd6b2",
    "type": "ComponentsTable",
    "typeDesc": "table Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "logFilesTable",
      "type": "Id"
     },
     {
      "name": "expandContainerObject",
      "value": "logTextColumn",
      "type": "String"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "oLanguage",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "colTypes",
      "value": "[\"hidden\",\"string\",\"string\",\"string\",\"numeric\",\"hidden\",\"actionButtons\"]",
      "type": "colTypesCustom"
     },
     {
      "name": "colFormats",
      "value": "[]",
      "type": "Array"
     },
     {
      "name": "colWidths",
      "value": "[\"0\",\"20%\",\"20%\",\"20%\",\"20%\",\"0\",\"20%\"]",
      "type": "Array"
     },
     {
      "name": "colSortable",
      "value": "[\"false\",\"true\",\"true\",\"true\",\"true\",\"false\",\"false\"]",
      "type": "Array"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "expandParameters",
      "value": "[[\"2\",\"filename\"],[\"1\",\"filepath\"],[\"4\",\"filesize\"]]",
      "type": "ValuesArray"
     },
     {
      "name": "colHeaders",
      "value": "[\"Type\",\"Path\",\"Filename\",\"Last Modified\",\"Size\",\"Full Filename\",\" \"]",
      "type": "Array"
     },
     {
      "name": "displayLength",
      "value": "50",
      "type": "Integer"
     },
     {
      "name": "lengthChange",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "filter",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "info",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "sort",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "expandOnClick",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "paginate",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "colSearchable",
      "value": "[\"2\"]",
      "type": "Array"
     },
     {
      "name": "drawCallback",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "dataSource",
      "value": "getLogFiles",
      "type": "Datasource"
     },
     {
      "name": "sDom",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "sortBy",
      "value": "[[\"2\",\"asc\"]]",
      "type": "SortByArray"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": "5",
      "type": "Integer"
     },
     {
      "name": "tableStyle",
      "value": "themeroller",
      "type": "TableStyle"
     },
     {
      "name": "paginationType",
      "value": "two_button",
      "type": "PaginationType"
     },
     {
      "name": "htmlObject",
      "value": "${p:tableCell}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "paginateServerside",
      "value": "false",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "function f(){\n    \n    var pluginId = Dashboards.getParameterValue('${p:pluginIdParam}'),\n        dialog = Dashboards.getComponentByName('${c:dialogGrabComponent}');\n    \n    // Callbacks\n    var successCallback = function (refresh, v){\n        Dashboards.fireChange('${p:updateDataEvent}');\n        Dashboards.decrementRunningCalls();\n        if(refresh)\n        {\n            var table = Dashboards.getComponentByName(\"render_logFilesTable\");\n            \n            table.update();\n        }\n    };\n    \n    var errorCallback = function (message){\n        Dashboards.fireChange('${p:updateDataEvent}');\n        Dashboards.decrementRunningCalls();\n        \n        var okCallback = function() {\n            dialog.close();\n        }\n        \n        dialog.open({\n            message: message,\n            buttons:[\n                { text: \"OK\", click: okCallback }\n                ]\n        });\n    };\n    \n    // Actions \n    var deleteLogAction = function (v, st) {\n        var okCallback = function () {\n                dialog.close();\n                Dashboards.incrementRunningCalls();\n                sparkl.runEndpoint( Dashboards.getParameterValue(\"pluginIdParam\") , 'deleteLogFile', {\n                    params: { file_name: v.fileNameParam},\n                    success: function() { successCallback(true, v);},\n                    error:   function() { errorCallback(\"Error deleting \"+v.shortFileNameParam+\". See logs for more information.\")}\n                });\n            },\n            cancelCallback = function () { \n                dialog.close(); \n            } \n        \n        dialog.open({\n            message:\"You are about to delete \" + v.fileNameParam + \". Please, press OK to delete the file.\",\n            buttons:[\n                { text: \"OK\", click: okCallback },\n                { text: \"Cancel\", click: cancelCallback }\n            ]\n        });\n    }\n    \n    // Actions \n    var downloadLogAction = function (v, st) {\n        \n        sparkl.runEndpointAsLink( Dashboards.getParameterValue(\"pluginIdParam\") , 'downloadLogFile', { paramfile_name: v.fileNameParam });\n        \n    }\n\n    \n    // Options\n    var optsLib = {\n        log: {\n            buttons: [\n                {\n                    cssClass: \"viewLogButton\",\n                    title: \" \",\n                    tooltip: \"View Log\",\n                    action: function (v, st) {\n                        sparkl.changeLocation(Dashboards.getWebAppPath() + '/plugin/' + pluginId + '/api/viewlog' , v , true, v.shortFileNameParam);\n                    }\n                },\n                {\n                    cssClass: \"downloadLogButton\",\n                    title: \" \",\n                    tooltip: \"Download Log\",\n                    action: downloadLogAction\n                },\n                {\n                    cssClass: \"deleteLogButton\",\n                    title: \" \",\n                    tooltip: \"Delete Log\",\n                    action: deleteLogAction\n                }                \n            ]\n        }\n    }\n\n    var opts = function (st){\n        var type = \"log\";\n        return optsLib[type] || {}\n    };\n    this.setAddInOptions(\"colType\",\"actionButtons\",opts);\n    \n    var textOpts = {\n        textFormat: function (v){\n            return v ? \"Admin Only\" : \"All Users\";\n        }\n    };\n    this.setAddInOptions(\"colType\",\"formattedText\",textOpts);\n    \n}",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "function f(data){\n    if(!_.isEmpty(data)){\n        var fileNamesList = [];\n        _.each( data.resultset, function (el){\n            fileNamesList.push(el[5]);\n            var bookmark = {\n                fileNameParam : el[5],\n                fileSizeParam : el[4],\n                filePathParam : el[1],\n                shortFileNameParam : el[2]\n            };\n            el.push(bookmark); \n        });\n        \n        Dashboards.setParameter(\"${p:fileNamesListParam}\",fileNamesList);\n        data.metadata.push( $.extend( {} , data.metadata[0] ) );\n        var lastMetadataElIdx = data.metadata.length-1;\n        (data.metadata[lastMetadataElIdx]).colIndex = lastMetadataElIdx;\n    \n\n        //enable filtering and disable sort in the actions column\n        var objOpts = Dashboards.propertiesArrayToObject(this.extraOptions);        \n        objOpts['bFilter'] = true;\n        objOpts['aoColumnDefs'] = [\n            { 'bSortable': false, 'aTargets': [ 6 ] }\n        ]\n        this.extraOptions = Dashboards.objectToPropertiesArray( objOpts );\n        \n        return data;\n    }else{\n        data = sparkl.createElementsTableEmptyRawData();\n        return data;\n    }\n}",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     },
     {
      "name": "extraOptions",
      "value": "[]",
      "type": "OptionArray"
     },
     {
      "name": "clickAction",
      "value": "",
      "type": "JavaScript"
     }
    ]
   },
   {
    "id": "649c67d6-9ffd-b460-0461-8c860204ad79",
    "type": "ComponentstextComponent",
    "typeDesc": "Text Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "dialogGrabComponent",
      "type": "Id"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "expression",
      "value": "function f(){\n    \n    /* tranfering dialog(close) to component's method  - options management similar addins */  \n    this.open = function (opts){\n        \n        /*default opts*/\n        var dialogOpts = {\n            dialogClass: \"confirmationDialog\",\n            modal:true,\n            resizable: false,\n            draggable: false,\n            title: \"Confirmation Message\",\n            buttons: [\n                {\n                    text: \"OK\",\n                    click: function() {\n                        $( this ).dialog( \"close\" );\n                    }\n                }\n            ]\n        };\n        /*merge of defaults with user custom opts*/\n        $.extend( dialogOpts, opts); \n        /*method's action*/\n        $( \"#\" + this.htmlObject ).dialog(dialogOpts);\n        $( \"#\" + this.htmlObject).empty().append($(\"<span>\"+dialogOpts.message+\"</span>\"));\n    };\n    \n    this.close = function (opts){\n        $( \"#\" + this.htmlObject ).dialog('close');\n    };\n}",
      "type": "JavaScript"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "dialogGrabComponentObj",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "ba44bff1-c857-2642-cf57-6ce1134eff14",
    "type": "ComponentsbuttonComponent",
    "typeDesc": "Button Component",
    "parent": "OTHERCOMPONENTS",
    "properties": [
     {
      "name": "name",
      "value": "deleteButton",
      "type": "Id"
     },
     {
      "name": "label",
      "value": "Delete",
      "type": "String"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "successCallback",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "expression",
      "value": "function() {\n    var pluginId = Dashboards.getParameterValue('${p:pluginIdParam}'),\n        dialog = Dashboards.getComponentByName('${c:dialogGrabComponent}'),\n        period = Dashboards.getParameterValue('${p:deletePeriodParam}'),\n        age = Dashboards.getParameterValue('${p:deleteAgeParam}');\n    \n    // Callbacks\n    var successCallback = function (refresh, v){\n        Dashboards.fireChange('${p:updateDataEvent}');\n        Dashboards.decrementRunningCalls();\n        if(refresh)\n        {\n            var table = Dashboards.getComponentByName(\"render_logFilesTable\");\n            \n            table.update();\n        }\n    };\n    \n    var errorCallback = function (message){\n        Dashboards.fireChange('${p:updateDataEvent}');\n        Dashboards.decrementRunningCalls();\n        \n        var okCallback = function() {\n            dialog.close();\n        }\n        \n        dialog.open({\n            message: message,\n            buttons:[\n                { text: \"OK\", click: okCallback }\n                ]\n        });\n    };\n    \n    // Actions \n    var deleteOldLogsAction = function () {\n        var okCallback = function () {\n                dialog.close();\n                Dashboards.incrementRunningCalls();\n                sparkl.runEndpoint( Dashboards.getParameterValue(\"pluginIdParam\") , 'delete_old_files', {\n                    params: { delete_age: age, delete_period: period},\n                    success: function() { successCallback(true, undefined);},\n                    error:   function() { errorCallback(\"Error deleting old log files. See logs for more information.\")}\n                });\n            },\n            cancelCallback = function () { \n                dialog.close(); \n            } \n        \n        dialog.open({\n            message:\"You are about to delete all logs older than \"+age+\" \"+period+\". Please, press OK to delete these files.\",\n            buttons:[\n                { text: \"OK\", click: okCallback },\n                { text: \"Cancel\", click: cancelCallback }\n            ]\n        });\n    }\n    \n    deleteOldLogsAction();\n}",
      "type": "JavaScript"
     },
     {
      "name": "actionParameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "failureCallback",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "Datasource",
      "value": "",
      "type": "Datasource"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "buttonStyle",
      "value": "themeroller",
      "type": "TableStyle"
     },
     {
      "name": "htmlObject",
      "value": "${p:deleteButtonObj}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "GENERIC",
    "name": "Generic",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Generic",
      "type": "Label"
     }
    ]
   },
   {
    "id": "c0f2da7f-1fb3-324f-3d7d-41193514cc93",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "pluginIdParam",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "logManager",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "05b9167d-0e47-6dbc-c9c6-0a2dedb563ba",
    "type": "ComponentsJavascriptParameter",
    "typeDesc": "Custom parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "fileNamesListParam",
      "type": "Id"
     },
     {
      "name": "javaScript",
      "value": "[]",
      "type": "JavaScript"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "d78b018a-e1da-4a09-fca2-5b6c56fc59c0",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "deleteAgeParam",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "30",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "e433e144-e043-6c99-e10f-510ce49f042d",
    "type": "ComponentsParameter",
    "typeDesc": "Simple parameter",
    "parent": "GENERIC",
    "properties": [
     {
      "name": "name",
      "value": "deletePeriodParam",
      "type": "Id"
     },
     {
      "name": "propertyValue",
      "value": "Days",
      "type": "String"
     },
     {
      "name": "parameterViewRole",
      "value": "unused",
      "type": "parameterViewRoleCustom"
     },
     {
      "name": "bookmarkable",
      "value": "false",
      "type": "Boolean"
     }
    ]
   },
   {
    "id": "SELECTORS",
    "name": "Selects",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "Selects",
      "type": "Label"
     }
    ]
   },
   {
    "id": "875f7d71-cabb-10d7-2f52-b0c49c1860dd",
    "type": "ComponentstextInput",
    "typeDesc": "Text input Component",
    "parent": "SELECTORS",
    "properties": [
     {
      "name": "name",
      "value": "deleteAgeInput",
      "type": "Id"
     },
     {
      "name": "parameter",
      "value": "${p:deleteAgeParam}",
      "type": "Parameter"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "maxLength",
      "value": "3",
      "type": "Integer"
     },
     {
      "name": "size",
      "value": "3",
      "type": "Integer"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "${p:deleteAgeObj}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     }
    ]
   },
   {
    "id": "a256e49e-97c2-5bcf-9fd6-2a78b5e61e4f",
    "type": "ComponentsSelect",
    "typeDesc": "Select Component",
    "parent": "SELECTORS",
    "properties": [
     {
      "name": "name",
      "value": "deletePeriodInput",
      "type": "Id"
     },
     {
      "name": "parameter",
      "value": "${p:deletePeriodParam}",
      "type": "Parameter"
     },
     {
      "name": "listeners",
      "value": "[]",
      "type": "Listeners"
     },
     {
      "name": "parameters",
      "value": "[]",
      "type": "ValuesArray"
     },
     {
      "name": "valueAsId",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "externalPlugin",
      "value": "",
      "type": "String"
     },
     {
      "name": "dataSource",
      "value": "",
      "type": "Datasource"
     },
     {
      "name": "valuesArray",
      "value": "[[\"Hours\",\"Hours\"],[\"Days\",\"Days\"]]",
      "type": "ValuesArray"
     },
     {
      "name": "priority",
      "value": 5,
      "type": "Integer"
     },
     {
      "name": "refreshPeriod",
      "value": "",
      "type": "Integer"
     },
     {
      "name": "htmlObject",
      "value": "${p:deletePeriodObj}",
      "type": "HtmlObject"
     },
     {
      "name": "executeAtStart",
      "value": "true",
      "type": "Boolean"
     },
     {
      "name": "preExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postExecution",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postFetch",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "preChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "postChange",
      "value": "",
      "type": "JavaScript"
     },
     {
      "name": "tooltip",
      "value": "",
      "type": "Html"
     },
     {
      "name": "extraOptions",
      "value": "[]",
      "type": "OptionArray"
     }
    ]
   }
  ]
 },
 "datasources": {
  "rows": [
   {
    "id": "LOGMANAGER_CPKENDPOINTS",
    "name": "LOGMANAGER Endpoints",
    "type": "Label",
    "typeDesc": "<i>Group</i>",
    "parent": "UnIqEiD",
    "properties": [
     {
      "name": "Group",
      "value": "LOGMANAGER Endpoints",
      "type": "Label"
     }
    ]
   },
   {
    "id": "b869572b-b22d-8482-f4f0-a0340de05f30",
    "type": "ComponentslogManager_get_log_files_CPKENDPOINT",
    "typeDesc": "get_log_files Endpoint",
    "parent": "LOGMANAGER_CPKENDPOINTS",
    "properties": [
     {
      "name": "name",
      "value": "getLogFiles",
      "type": "Id"
     }
    ],
    "meta": "CPK",
    "meta_pluginId": "logManager",
    "meta_endpoint": "get_log_files"
   }
  ]
 },
 "filename": "/system/logManager/dashboards/main.cdfde"
}